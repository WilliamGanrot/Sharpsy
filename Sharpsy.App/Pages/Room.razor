@using Sharpsy.Library.Models
@using Sharpsy.DataAccess.Stores
@using Sharpsy.App.Components
@using Sharpsy.App.Services
@page "/room/{roomId:int}"
@inject IStorage RoomStore
@inject State State

@if (RoomModel == null)
{
    <p>not found</p>
}
else if (!IsAuthorizedUser)
{
    <NotAuthorized></NotAuthorized>
}
else
{
    
    <div style="background-color:firebrick; width:100%; height:100vh;padding:1rem!important">
        <h3 style="color:white">Room @RoomModel.Title</h3>

        <div style="height:78vh;width:82%;margin:auto;background-color:#fff">
            hej
        </div>

        <div style=" position: absolute; bottom: 30px; width: 80%;left: 50%; transform: translateX(-50%);">
            <textarea @bind="MessageText" @bind:event="oninput" rows="3" style="width:100%;resize: none;" @onkeydown="@Enter"></textarea>
        </div>
    </div>
}
@code {

    [Parameter]
    public int roomId { get; set; }
    public RoomModel RoomModel { get; set; }

    public ApplicationUser User { get; set; }

    public bool IsAuthorizedUser { get; set; }

    private string MessageText;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        RoomModel = await RoomStore.FindRoomById(roomId);
        if (RoomModel == null)
            return;

        User = await State.GetAuthenticatedUser();
        IsAuthorizedUser = User == null
            ? false
            : await RoomStore.IsUserInRoom(User.Id, roomId);

    }

    public async Task Enter(KeyboardEventArgs e)
    {
        fif (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            if (!string.IsNullOrEmpty(MessageText))
            {
                var message = new Message
                {
                    Text = MessageText,
                    UserId = User.Id,
                    RoomId = roomId
                };

                var res = await RoomStore.InsertMessage(message);
                if (res != 0)
                    MessageText = "";

            }
        }
    }
}
